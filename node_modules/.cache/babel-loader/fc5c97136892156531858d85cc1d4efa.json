{"ast":null,"code":"var _jsxFileName = \"/Users/snehal/Documents/code/sem3/robort/mad9135-c1-react-router/src/App.js\";\nimport React from 'react';\nimport AppHeader from './AppHeader';\nimport ProfileCard from './ProfileCard';\nimport LoadPosts from './LoadPosts';\nimport LoadToDos from './LoadToDos';\nimport UserDetails from './UserDetails';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      profiles: [],\n      userDetails: [],\n      userPosts: [],\n      userToDos: []\n    };\n\n    this.getDerailedUser = async profiles => {\n      const userId = profiles.id;\n      let url = \"https://jsonplaceholder.typicode.com/users/?id=\".concat(userId);\n      await fetch(url).then(res => res.json()).then(response => {\n        this.setState({\n          userDetails: response\n        });\n      }).catch(error => {\n        console.log(error.message);\n      });\n    };\n\n    this.getPostsOfUser = async users => {\n      const userId = users.id;\n      let url = \"https://jsonplaceholder.typicode.com/posts?userId=\".concat(userId);\n      await fetch(url).then(res => res.json()).then(response => {\n        console.log(\" => \" + response);\n        this.setState({\n          userPosts: response\n        });\n      }).catch(error => {\n        console.log(error.message);\n      });\n    };\n\n    this.getToDosOfUser = async users => {\n      const userId = users.id;\n      let url = \"https://jsonplaceholder.typicode.com/todos?userId=\".concat(userId);\n      await fetch(url).then(res => res.json()).then(response => {\n        console.log(\" => \" + response);\n        this.setState({\n          userToDos: response\n        });\n      }).catch(error => {\n        console.log(error.message);\n      });\n    };\n  }\n\n  getInitialProfiles() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return \"Something went wrong\";\n      }\n    }).then(profiles => this.setState({\n      profiles: profiles\n    })).catch(console.error);\n  }\n\n  componentDidMount() {\n    this.getInitialProfiles();\n  }\n\n  render() {\n    const profileJsx = this.state.profiles.map(profile => React.createElement(ProfileCard, {\n      profile: profile,\n      getPost: this.LoadPosts,\n      getDetails: this.getDerailedUser,\n      key: profile.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }));\n\n    const LoadAllUsers = () => React.createElement(\"main\", {\n      className: \"profileList\",\n      style: {\n        padding: '2rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(CSSTransitionGroup, {\n      component: \"div\",\n      transitionName: \"fade\",\n      transitionAppear: true,\n      transitionAppearTimeout: 200,\n      transitionEnterTimeout: 250,\n      transitionLeaveTimeout: 225,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, profileJsx));\n\n    const JSXUserDetail = this.state.userDetails.map(detail => React.createElement(UserDetails, {\n      key: detail.id,\n      getPost: this.getPostsOfUser,\n      details: detail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }));\n    const JSXUserPosts = this.state.userPosts.map(post => React.createElement(LoadPosts, {\n      key: post.id,\n      post: post,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }));\n    const JSXUserTodos = this.state.userToDos.map(todos => React.createElement(LoadToDos, {\n      key: todos.id,\n      todos: todos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }));\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(AppHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: LoadAllUsers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, JSXUserPosts), React.createElement(Route, {\n      exact: true,\n      path: \"/userDetails\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, JSXUserDetail), React.createElement(Route, {\n      exact: true,\n      path: \"/userToDos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, JSXUserTodos))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/snehal/Documents/code/sem3/robort/mad9135-c1-react-router/src/App.js"],"names":["React","AppHeader","ProfileCard","LoadPosts","LoadToDos","UserDetails","CSSTransitionGroup","BrowserRouter","Route","Switch","App","Component","state","profiles","userDetails","userPosts","userToDos","getDerailedUser","userId","id","url","fetch","then","res","json","response","setState","catch","error","console","log","message","getPostsOfUser","users","getToDosOfUser","getInitialProfiles","ok","componentDidMount","render","profileJsx","map","profile","LoadAllUsers","padding","JSXUserDetail","detail","JSXUserPosts","post","JSXUserTodos","todos"],"mappings":"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","sourcesContent":["import React from 'react';\nimport AppHeader from './AppHeader';\nimport ProfileCard from './ProfileCard';\nimport LoadPosts from './LoadPosts';\nimport LoadToDos from './LoadToDos';\nimport UserDetails from './UserDetails';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport { BrowserRouter ,Route, Switch } from 'react-router-dom'\nimport './App.css';\n\nclass App extends React.Component {\n\n  state = {\n    profiles : [],\n    userDetails: [],\n    userPosts : [],\n    userToDos : []\n  }\n  \n  getInitialProfiles() {\n    fetch(`https://jsonplaceholder.typicode.com/users`)\n    .then(res => {\n          if(res.ok){\n            return res.json()\n          }else{\n            return \"Something went wrong\"\n          }\n    })\n    .then(profiles => this.setState({ profiles: profiles }))\n    .catch(console.error)\n  }\n  \n  componentDidMount () {\n    this.getInitialProfiles()\n  }\n\n  getDerailedUser = async (profiles) => {\n    const userId = profiles.id\n    let url = `https://jsonplaceholder.typicode.com/users/?id=${userId}`\n    await fetch(url)\n        .then(res => res.json())\n        .then(response =>{\n          this.setState({ userDetails: response })\n        })\n        .catch(error => {\n          console.log(error.message)\n        })\n\n  }\n\n  getPostsOfUser = async (users) => {\n    const userId = users.id\n    let url = `https://jsonplaceholder.typicode.com/posts?userId=${userId}`\n    await fetch(url)\n        .then(res => res.json())\n        .then(response =>{\n          console.log(\" => \" + response)\n          this.setState({ userPosts: response })\n        })\n        .catch(error => {\n          console.log(error.message)\n        })\n  }\n\n  getToDosOfUser = async (users) => {\n    const userId = users.id\n    let url = `https://jsonplaceholder.typicode.com/todos?userId=${userId}`\n    await fetch(url)\n        .then(res => res.json())\n        .then(response =>{\n          console.log(\" => \" + response)\n          this.setState({ userToDos: response })\n        })\n        .catch(error => {\n          console.log(error.message)\n        })\n  }\n\n  render(){\n    \n    const profileJsx = this.state.profiles.map(profile =>\n    (\n      <ProfileCard profile={profile} getPost={this.LoadPosts} getDetails={this.getDerailedUser} key={profile.id}/>\n    ) )\n\n  const LoadAllUsers = () => <main className='profileList' style={{ padding: '2rem'}}>\n                                <CSSTransitionGroup component=\"div\"\n                                  transitionName=\"fade\"\n                                  transitionAppear={true}\n                                  transitionAppearTimeout={200}\n                                  transitionEnterTimeout={250}\n                                  transitionLeaveTimeout={225}>\n                                  {profileJsx}\n                                </CSSTransitionGroup>\n                              </main>\n\n  const JSXUserDetail = this.state.userDetails.map(detail => (\n    <UserDetails key={detail.id} getPost={this.getPostsOfUser} details={detail} />\n  ))\n\n  const JSXUserPosts =  this.state.userPosts.map(post =>(\n      <LoadPosts key={ post.id } post={post} />\n    ) )\n\n    \n    const JSXUserTodos =  this.state.userToDos.map(todos =>(\n      <LoadToDos key={ todos.id } todos={todos} />\n    ) )\n    return (\n\n      <BrowserRouter>\n        <div className='App'>\n          <AppHeader />\n          \n          <Switch>\n              <Route exact path=\"/\" component={LoadAllUsers} />\n              <Route exact path=\"/posts\">\n                {JSXUserPosts}\n              </Route>\n              <Route exact path=\"/userDetails\" >\n                  {JSXUserDetail}\n              </Route>\n              <Route exact path=\"/userToDos\">\n                {JSXUserTodos}\n              </Route>\n          </Switch>\n        </div>\n      </BrowserRouter>\n      \n      \n      \n    )\n  };\n\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}