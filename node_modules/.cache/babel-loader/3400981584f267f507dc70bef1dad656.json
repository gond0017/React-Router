{"ast":null,"code":"import ShorthandsNormalizerFactory, { SIDES, HORIZONTAL, VERTICAL } from './ShorthandsNormalizerFactory';\n/**\n * Style Normalizer uses ShorthandsNormalizerCreators to creates different normalizers\n * specific to properties.\n */\n\nexport default class StyleNormalizer {\n  constructor() {\n    this.normalizers = {};\n    this.createNormalizers('margin', [HORIZONTAL, VERTICAL, SIDES]);\n    this.createNormalizers('padding', [HORIZONTAL, VERTICAL, SIDES]);\n    this.createNormalizers('border', [SIDES], 'Width');\n  }\n\n  createNormalizers(prop, shorthands, suffix = '') {\n    shorthands.forEach(shorthand => {\n      const propName = prop + shorthand.type + suffix;\n\n      if (this.normalizerExists(propName)) {\n        throw Error(\"Normalizer for '\".concat(propName, \"' shorthand already exists\"));\n      }\n\n      this.normalizers[propName] = ShorthandsNormalizerFactory.createNormalizer(prop, shorthand, suffix);\n    });\n  }\n\n  normalizerExists(normalizerName) {\n    return !!this.normalizers[normalizerName];\n  }\n\n  canNormalize(prop) {\n    return this.normalizerExists(prop);\n  }\n\n  normalize(prop, val) {\n    return this.normalizers[prop](val);\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}