{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Fab = undefined;\nvar _jsxFileName = 'src/basic/Fab.js';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactNative = require('react-native');\n\nvar _lodash = require('lodash');\n\nvar _nativeBaseShoutemTheme = require('native-base-shoutem-theme');\n\nvar _platform = require('../theme/variables/platform');\n\nvar _platform2 = _interopRequireDefault(_platform);\n\nvar _commonColor = require('../theme/variables/commonColor');\n\nvar _computeProps = require('../utils/computeProps');\n\nvar _computeProps2 = _interopRequireDefault(_computeProps);\n\nvar _mapPropsToStyleNames = require('../utils/mapPropsToStyleNames');\n\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\n\nvar _Button = require('./Button');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar DIRECTION = {\n  DOWN: 'down',\n  LEFT: 'left',\n  RIGHT: 'right',\n  UP: 'up'\n};\nvar POSITION = {\n  BOTTOM_LEFT: 'bottomLeft',\n  BOTTOM_RIGHT: 'bottomRight',\n  TOP_LEFT: 'topLeft',\n  TOP_RIGHT: 'topRight'\n};\n\nvar AnimatedFab = _reactNative.Animated.createAnimatedComponent(_Button.Button);\n\nvar Fab = function (_Component) {\n  _inherits(Fab, _Component);\n\n  function Fab(props) {\n    _classCallCheck(this, Fab);\n\n    var _this = _possibleConstructorReturn(this, (Fab.__proto__ || Object.getPrototypeOf(Fab)).call(this, props));\n\n    _this.prepareButtonProps = function (child) {\n      var inp = (0, _lodash.clone)(child.props);\n      delete inp.style;\n      var defaultProps = {};\n      return (0, _computeProps2.default)(inp, defaultProps);\n    };\n\n    _this.fabTopValue = function (pos) {\n      if (pos === POSITION.TOP_LEFT) {\n        return {\n          top: _platform2.default.fabDefaultPosition,\n          bottom: undefined,\n          left: _platform2.default.fabDefaultPosition,\n          right: undefined\n        };\n      } else if (pos === POSITION.BOTTOM_RIGHT) {\n        return {\n          top: undefined,\n          bottom: _platform2.default.fabDefaultPosition,\n          left: undefined,\n          right: _platform2.default.fabDefaultPosition\n        };\n      } else if (pos === POSITION.BOTTOM_LEFT) {\n        return {\n          top: undefined,\n          bottom: _platform2.default.fabDefaultPosition,\n          left: _platform2.default.fabDefaultPosition,\n          right: undefined\n        };\n      } else if (pos === POSITION.TOP_RIGHT) {\n        return {\n          top: _platform2.default.fabDefaultPosition,\n          bottom: undefined,\n          left: undefined,\n          right: _platform2.default.fabDefaultPosition\n        };\n      }\n\n      return null;\n    };\n\n    _this.containerHeight = new _reactNative.Animated.Value(_platform2.default.fabWidth);\n    _this.containerWidth = new _reactNative.Animated.Value(0);\n    _this.buttonScale = new _reactNative.Animated.Value(0);\n    _this.state = {\n      buttons: undefined,\n      active: false\n    };\n    return _this;\n  }\n\n  _createClass(Fab, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var childrenArray = _react2.default.Children.toArray(this.props.children);\n\n      var icon = (0, _lodash.remove)(childrenArray, function (item) {\n        if (item.type.displayName === 'Styled(Button)') {\n          return true;\n        }\n\n        return null;\n      });\n      this.setState({\n        buttons: icon.length\n      });\n      this.activeTimer = setTimeout(function () {\n        _this2.setState({\n          active: _this2.props.active\n        });\n      }, 0);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.activeTimer) {\n        clearTimeout(this.activeTimer);\n      }\n    }\n  }, {\n    key: 'getOtherButtonStyle',\n    value: function getOtherButtonStyle(child, i) {\n      var _props = this.props,\n          active = _props.active,\n          direction = _props.direction;\n      var type = {\n        top: direction ? this.fabOtherBtns(direction, i).top : undefined,\n        left: direction ? this.fabOtherBtns(direction, i).left : 8,\n        right: direction ? this.fabOtherBtns(direction, i).right : 0,\n        bottom: direction ? this.fabOtherBtns(direction, i).bottom : active === false ? _reactNative.Platform.OS === _commonColor.PLATFORM.IOS ? 8 : 8 : i * 50 + 50\n      };\n      return (0, _lodash.merge)(this.getInitialStyle().buttonStyle, _reactNative.StyleSheet.flatten(child.props.style), type);\n    }\n  }, {\n    key: 'getContainerStyle',\n    value: function getContainerStyle() {\n      return (0, _lodash.merge)(this.getInitialStyle().container, this.props.containerStyle);\n    }\n  }, {\n    key: 'getInitialStyle',\n    value: function getInitialStyle(iconStyle) {\n      var _props2 = this.props,\n          direction = _props2.direction,\n          position = _props2.position;\n      return {\n        fab: {\n          height: _platform2.default.fabWidth,\n          width: _platform2.default.fabWidth,\n          borderRadius: _platform2.default.fabBorderRadius,\n          elevation: _platform2.default.fabElevation,\n          shadowColor: _platform2.default.fabShadowColor,\n          shadowOffset: {\n            width: _platform2.default.fabShadowOffsetWidth,\n            height: _platform2.default.fabShadowOffsetHeight\n          },\n          shadowOpacity: _platform2.default.fabShadowOpacity,\n          justifyContent: 'center',\n          alignItems: 'center',\n          shadowRadius: _platform2.default.fabShadowRadius,\n          position: 'absolute',\n          bottom: _platform2.default.fabBottom,\n          backgroundColor: _platform2.default.fabBackgroundColor\n        },\n        container: {\n          position: 'absolute',\n          top: position ? this.fabTopValue(position).top : undefined,\n          bottom: position ? this.fabTopValue(position).bottom : _platform2.default.fabContainerBottom,\n          right: position ? this.fabTopValue(position).right : _platform2.default.fabContainerBottom,\n          left: position ? this.fabTopValue(position).left : undefined,\n          width: _platform2.default.fabWidth,\n          height: this.containerHeight,\n          flexDirection: direction ? direction === DIRECTION.LEFT || direction === DIRECTION.RIGHT ? 'row' : 'column' : 'column',\n          alignItems: 'center'\n        },\n        iconStyle: _extends({\n          color: _platform2.default.fabIconColor,\n          fontSize: _platform2.default.fabIconSize,\n          lineHeight: _reactNative.Platform.OS === _commonColor.PLATFORM.IOS ? 27 : undefined\n        }, iconStyle),\n        buttonStyle: {\n          position: 'absolute',\n          height: _platform2.default.fabButtonHeight,\n          width: _platform2.default.fabButtonHeight,\n          left: _platform2.default.fabButtonLeft,\n          borderRadius: _platform2.default.fabButtonBorderRadius,\n          transform: this.state.active ? [{\n            scale: new _reactNative.Animated.Value(1)\n          }] : [{\n            scale: this.buttonScale\n          }],\n          marginBottom: _platform2.default.fabButtonMarginBottom,\n          backgroundColor: _platform2.default.fabBackgroundColor\n        }\n      };\n    }\n  }, {\n    key: 'fabOtherBtns',\n    value: function fabOtherBtns(direction, i) {\n      var active = this.props.active;\n\n      if (direction === DIRECTION.UP) {\n        return {\n          top: undefined,\n          bottom: active === false ? _reactNative.Platform.OS === _commonColor.PLATFORM.IOS ? 50 : 5 : i * 50 + 65,\n          left: 8,\n          right: 0\n        };\n      } else if (direction === DIRECTION.LEFT) {\n        return {\n          top: 8,\n          bottom: 0,\n          left: active === false ? _reactNative.Platform.OS === _commonColor.PLATFORM.IOS ? 8 : 8 : -(i * 50 + _platform2.default.fabWidth + 2),\n          right: 0\n        };\n      } else if (direction === DIRECTION.DOWN) {\n        return {\n          top: active === false ? _reactNative.Platform.OS === _commonColor.PLATFORM.IOS ? 50 : 8 : i * 50 + 73,\n          bottom: 0,\n          left: 8,\n          right: 0\n        };\n      } else if (direction === DIRECTION.RIGHT) {\n        return {\n          top: 8,\n          bottom: 0,\n          left: active === false ? _reactNative.Platform.OS === _commonColor.PLATFORM.IOS ? 50 : 8 : i * 50 + 73,\n          right: 0\n        };\n      }\n\n      return null;\n    }\n  }, {\n    key: 'prepareFabProps',\n    value: function prepareFabProps() {\n      var defaultProps = {\n        style: this.getInitialStyle().fab\n      };\n      var incomingProps = (0, _lodash.clone)(this.props);\n      delete incomingProps.onPress;\n      return (0, _computeProps2.default)(incomingProps, defaultProps);\n    }\n  }, {\n    key: 'upAnimate',\n    value: function upAnimate() {\n      if (!this.props.active) {\n        _reactNative.Animated.spring(this.containerHeight, {\n          toValue: this.state.buttons * 51.3 + _platform2.default.fabWidth\n        }).start();\n\n        _reactNative.Animated.spring(this.buttonScale, {\n          toValue: 1,\n          useNativeDriver: true\n        }).start();\n      } else {\n        this.setState({\n          active: false\n        });\n\n        _reactNative.Animated.spring(this.containerHeight, {\n          toValue: _platform2.default.fabWidth\n        }).start();\n\n        _reactNative.Animated.spring(this.buttonScale, {\n          toValue: 0,\n          useNativeDriver: true\n        }).start();\n      }\n    }\n  }, {\n    key: 'leftAnimate',\n    value: function leftAnimate() {\n      if (!this.props.active) {\n        _reactNative.Animated.spring(this.containerWidth, {\n          toValue: this.state.buttons * 51.3 + _platform2.default.fabWidth\n        }).start();\n\n        _reactNative.Animated.spring(this.buttonScale, {\n          toValue: 1,\n          useNativeDriver: true\n        }).start();\n      } else {\n        this.setState({\n          active: false\n        });\n\n        _reactNative.Animated.spring(this.containerHeight, {\n          toValue: _platform2.default.fabWidth\n        }).start();\n\n        _reactNative.Animated.spring(this.buttonScale, {\n          toValue: 0,\n          useNativeDriver: true\n        }).start();\n      }\n    }\n  }, {\n    key: 'rightAnimate',\n    value: function rightAnimate() {\n      if (!this.props.active) {\n        _reactNative.Animated.spring(this.containerWidth, {\n          toValue: this.state.buttons * 51.3 + _platform2.default.fabWidth\n        }).start();\n\n        _reactNative.Animated.spring(this.buttonScale, {\n          toValue: 1,\n          useNativeDriver: true\n        }).start();\n      } else {\n        this.setState({\n          active: false\n        });\n\n        _reactNative.Animated.spring(this.containerHeight, {\n          toValue: _platform2.default.fabWidth\n        }).start();\n\n        _reactNative.Animated.spring(this.buttonScale, {\n          toValue: 0,\n          useNativeDriver: true\n        }).start();\n      }\n    }\n  }, {\n    key: 'downAnimate',\n    value: function downAnimate() {\n      if (!this.props.active) {\n        _reactNative.Animated.spring(this.containerHeight, {\n          toValue: _platform2.default.fabWidth\n        }).start();\n\n        _reactNative.Animated.spring(this.buttonScale, {\n          toValue: 1,\n          useNativeDriver: true\n        }).start();\n      } else {\n        this.setState({\n          active: false\n        });\n\n        _reactNative.Animated.spring(this.containerHeight, {\n          toValue: _platform2.default.fabWidth\n        }).start();\n\n        _reactNative.Animated.spring(this.buttonScale, {\n          toValue: 0,\n          useNativeDriver: true\n        }).start();\n      }\n    }\n  }, {\n    key: '_animate',\n    value: function _animate() {\n      var _props3 = this.props,\n          direction = _props3.direction,\n          position = _props3.position;\n\n      if (direction) {\n        if (direction === DIRECTION.UP) {\n          if (position === POSITION.TOP_LEFT || position === POSITION.TOP_RIGHT) {\n            console.warn('Passing direction = up with position = topLeft/topRight is not suggested.');\n          } else {\n            this.upAnimate();\n          }\n        } else if (direction === DIRECTION.LEFT) {\n          if (position === POSITION.TOP_LEFT || position === POSITION.BOTTOM_LEFT) {\n            console.warn('Passing direction = left with position = topLeft/bottomLeft is not suggested.');\n          } else {\n            this.leftAnimate();\n          }\n        } else if (direction === DIRECTION.RIGHT) {\n          if (position === POSITION.TOP_RIGHT || position === POSITION.BOTTOM_RIGHT) {\n            console.warn('Passing direction = right with position = topRight/bottomRight is not suggested.');\n          } else {\n            this.rightAnimate();\n          }\n        } else if (direction === DIRECTION.DOWN) {\n          if (position === POSITION.BOTTOM_LEFT || position === POSITION.BOTTOM_RIGHT) {\n            console.warn('Passing direction = down with position = bottomLeft/bottomRight is not suggested.');\n          } else {\n            this.downAnimate();\n          }\n        }\n      } else {\n        this.upAnimate();\n      }\n    }\n  }, {\n    key: 'fabOnPress',\n    value: function fabOnPress() {\n      var _this3 = this;\n\n      if (this.props.onPress) {\n        this.props.onPress();\n\n        this._animate();\n\n        this.activeTimer = setTimeout(function () {\n          _this3.setState({\n            active: _this3.props.active\n          });\n        }, 100);\n      }\n    }\n  }, {\n    key: 'renderButtons',\n    value: function renderButtons() {\n      var _this4 = this;\n\n      var childrenArray = _react2.default.Children.toArray(this.props.children);\n\n      var newChildren = [];\n      childrenArray.slice(1).map(function (child, i) {\n        return newChildren.push(_react2.default.createElement(AnimatedFab, _extends({\n          style: _this4.getOtherButtonStyle(child, i)\n        }, _this4.prepareButtonProps(child, i), {\n          fabButton: true,\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 427\n          }\n        }), child.props.children));\n      });\n      return newChildren;\n    }\n  }, {\n    key: 'renderFab',\n    value: function renderFab() {\n      var childrenArray = _react2.default.Children.toArray(this.props.children);\n\n      (0, _lodash.remove)(childrenArray, function (item) {\n        if (item.type.displayName === 'Styled(Button)') {\n          return true;\n        }\n\n        return null;\n      });\n      return _react2.default.cloneElement(childrenArray[0], {\n        style: this.getInitialStyle(childrenArray[0].props.style).iconStyle\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this5 = this;\n\n      var style = this.props.style;\n      return _react2.default.createElement(_reactNative.Animated.View, {\n        style: this.getContainerStyle(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        }\n      }, this.renderButtons(), _reactNative.Platform.OS === _commonColor.PLATFORM.IOS || _platform2.default.androidRipple === false || _reactNative.Platform.Version <= 21 ? _react2.default.createElement(_reactNative.TouchableOpacity, _extends({\n        onPress: function onPress() {\n          return _this5.fabOnPress();\n        }\n      }, this.prepareFabProps(), {\n        activeOpacity: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        }\n      }), this.renderFab()) : _react2.default.createElement(_reactNative.TouchableNativeFeedback, _extends({\n        onPress: function onPress() {\n          return _this5.fabOnPress();\n        },\n        background: _reactNative.TouchableNativeFeedback.Ripple(_platform2.default.androidRippleColor, false)\n      }, this.prepareFabProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        }\n      }), _react2.default.createElement(_reactNative.View, {\n        style: [this.getInitialStyle().fab, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        }\n      }, this.renderFab())));\n    }\n  }]);\n\n  return Fab;\n}(_react.Component);\n\nvar StyledFab = (0, _nativeBaseShoutemTheme.connectStyle)('NativeBase.Fab', {}, _mapPropsToStyleNames2.default)(Fab);\nexports.Fab = StyledFab;","map":null,"metadata":{},"sourceType":"script"}