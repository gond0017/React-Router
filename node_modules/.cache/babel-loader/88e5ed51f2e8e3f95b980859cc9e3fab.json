{"ast":null,"code":"var _jsxFileName = \"/Users/snehal/Documents/code/sem3/robort/mad9135-c1-react-router/src/App.js\";\nimport React from 'react';\nimport AppHeader from './AppHeader';\nimport ProfileCard from './ProfileCard';\nimport GetComments from './GetComments';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      profiles: []\n    };\n\n    this.getCommentsOfUser = async dataId => {\n      const response = await fetch(\"https://jsonplaceholder.typicode.com/comments/\".concat(dataId, \"/\"));\n\n      if (response.ok) {\n        const comment = await response.json();\n        this.setState({\n          comments: [comment, ...this.state.comments]\n        }); //return <Redirect to={ `/comments/${username}` } />\n      }\n    };\n  }\n\n  getInitialProfiles() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return \"Something went wrong\";\n      }\n    }).then(profiles => this.setState({\n      profiles: profiles\n    })).catch(console.error);\n  }\n\n  componentDidMount() {\n    this.getInitialProfiles();\n  }\n\n  render() {\n    const profileJsx = this.state.profiles.map(profile => React.createElement(ProfileCard, {\n      profile: profile,\n      handleClick: this.getCommentsOfUser,\n      key: profile.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n\n    const LoadAllUsers = () => React.createElement(\"main\", {\n      className: \"profileList\",\n      style: {\n        padding: '2rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(CSSTransitionGroup, {\n      component: \"div\",\n      transitionName: \"fade\",\n      transitionAppear: true,\n      transitionAppearTimeout: 200,\n      transitionEnterTimeout: 250,\n      transitionLeaveTimeout: 225,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, profileJsx));\n\n    const laodComment = () => React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(GetComments, {\n      dataId: \"\".concat(this.state.profiles.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }));\n\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(AppHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: LoadAllUsers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/comments/:commentId\",\n      component: laodComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/snehal/Documents/code/sem3/robort/mad9135-c1-react-router/src/App.js"],"names":["React","AppHeader","ProfileCard","GetComments","CSSTransitionGroup","BrowserRouter","Route","Switch","App","Component","state","profiles","getCommentsOfUser","dataId","response","fetch","ok","comment","json","setState","comments","getInitialProfiles","then","res","catch","console","error","componentDidMount","render","profileJsx","map","profile","id","LoadAllUsers","padding","laodComment"],"mappings":"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","sourcesContent":["import React from 'react';\nimport AppHeader from './AppHeader';\nimport ProfileCard from './ProfileCard';\nimport GetComments from './GetComments'\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport { BrowserRouter ,Route, Switch } from 'react-router-dom'\nimport './App.css';\n\nclass App extends React.Component {\n\n    state = {\n        profiles : []\n      }\n  \n  getInitialProfiles() {\n    fetch(`https://jsonplaceholder.typicode.com/users`)\n    .then(res => {\n          if(res.ok){\n            return res.json()\n          }else{\n            return \"Something went wrong\"\n          }\n    })\n    .then(profiles => this.setState({ profiles: profiles }))\n    .catch(console.error)\n  }\n  \n  componentDidMount () {\n    this.getInitialProfiles()\n  }\n\n  getCommentsOfUser = async (dataId) => {\n    const response = await fetch(`https://jsonplaceholder.typicode.com/comments/${dataId}/`)\n    if (response.ok){\n        const comment = await response.json()\n        this.setState({ comments: [comment, ...this.state.comments ]})\n        //return <Redirect to={ `/comments/${username}` } />\n    }\n}\n  render(){\n    const profileJsx = this.state.profiles.map(profile =>\n    ( \n      <ProfileCard profile={profile} handleClick={this.getCommentsOfUser} key={profile.id}/>\n    ) )\n\n  const LoadAllUsers = () => <main className='profileList' style={{ padding: '2rem'}}>\n                                <CSSTransitionGroup component=\"div\"\n                                  transitionName=\"fade\"\n                                  transitionAppear={true}\n                                  transitionAppearTimeout={200}\n                                  transitionEnterTimeout={250}\n                                  transitionLeaveTimeout={225}>\n                                  {profileJsx}\n                                </CSSTransitionGroup>\n                              </main>\n\n  const laodComment = () => <main>\n      <GetComments dataId={ `${this.state.profiles.id}` }  />\n  </main>\n\n    return (\n\n      <BrowserRouter>\n        <div className='App'>\n          <AppHeader />\n          <Switch>\n              <Route exact path=\"/\" component={LoadAllUsers} />\n              <Route exact path=\"/comments/:commentId\" component={laodComment} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n      \n    )\n  };\n\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}